#!/bin/bash

resolution=150
output=~/Downloads/scan.pdf
color=color
multiple=false
verbose=false

function usage () {
    echo "Scan to file (pdf)"
    echo "Options :"
    echo "  -r <resolution>         : Resolution. Defaults to $resolution"
    echo "  -o <output_file>        : Output file. Defaults to $output"
    echo "  -c {color|gray|mono}    : Colorspace [color, gray, monochrome]. Defaults to color"
    echo "  -m                      : Multiple"
    echo "  -v                      : Verbose"
}

function scan_pdf () {
    _output=$1

    scanimage --resolution $resolution -x 210 -y 295 --format tiff > /tmp/scan.tiff

    cmd=(convert -rotate 180)

    if [ "$color" = "gray" ]; then
        cmd+=(-colorspace Gray)
    elif [ "$color" = "mono" ]; then
        cmd+=(-monochrome)
    fi

    cmd+=(/tmp/scan.tiff $_output)
    ${cmd[@]}
}

while getopts r:o:gmvdh flag
do
    case "${flag}" in
        r) resolution=${OPTARG};;
        o) output=${OPTARG};;
        c) color=${OPTARG};;
        m) multiple=true;;
        v) verbose=true;;
        h) usage; exit 0;;
    esac
done

echo "Scanning to file (pdf)"

if [ "$verbose" = true ]; then
    echo "resolution    = $resolution"
    echo "output        = $output"
    echo "color         = $color"
    echo "multiple      = $multiple"
fi

date=$(date '+%Y-%m-%d-%H-%M-%S')

if [ "$multiple" = true ]; then
    continue=true
    page_cnt=0
    while [ "$continue" = true ]; do
        page_cnt=$((page_cnt+1))
        echo "Scanning page $page_cnt"
        scan_pdf /tmp/scan_${date}_${page_cnt}.pdf
        echo "Scan page $page_cnt complete"

        read -p "Scan another page ? (y/n) : " continue
        if [ "$continue" = "n" ]; then
            continue=false
        fi
    done

    pdftk /tmp/scan_${date}_*.pdf cat output /tmp/scan_${date}.pdf
    ps2pdf /tmp/scan_${date}.pdf $output

    echo "Scan complete ($page_cnt pages). Output = $output"
else
    scan_pdf $output
    echo "Scan complete. Output = $output"
fi

